@model Portfolio.Models.ListViewModel

@{
    var currentPage = string.IsNullOrEmpty(Context.Request.Query["p"]) ? 1 : int.Parse(Context.Request.Query["p"]);
    var totalPages = Math.Ceiling((double)Model.TotalPosts / 10);
}

@* Check do we need to display pagination links *@

@if (currentPage > 1 || currentPage < totalPages)
{
    var p = string.Format("p={0}", currentPage - 1);
    var n = string.Format("p={0}", currentPage + 1);

    @* If the view is rendered for "search" action append the pagination value with "&" *@

if (ViewContext.RouteData.Values["action"].ToString()
  .Equals("search", StringComparison.OrdinalIgnoreCase))
{
    var s = String.Format("?s={0}", Context.Request.Query["s"]);
    p = String.Format("{0}&{1}", s, p);
    n = String.Format("{0}&{1}", s, n);
}
else
{
    p = String.Concat("?", p);
    n = String.Concat("?", n);
}

    <!--pagination links-->
<div class="pager">

    <a href="@p" title="Previous" class="previous"
       style="visibility:@(currentPage > 1 ? "visible" : "collapse")"> &lt;&lt; previous</a>

    <a href="@n" title="Next" class="next"
       style="visibility:@(currentPage < totalPages ? "visible" : "collapse")">next &gt;&gt;</a>

</div>
}